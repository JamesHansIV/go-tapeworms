# HOW TO USE:
# ...
# ...
# ...

# ADD WARNINGS FOR STORING SECRETS

# config stuff (collections, filepaths, etc)

# filepaths must all be relative
filepaths: 
  dotenv: "./relative/path/to/.env"
  modal_hint_images_directory: "./relative/path/directory"
  genera_images_directory: "./relative/path/to/directory"
  feature_definitions_csv: "./relative/path/to/definitions.csv"
  genera_feature_data_xslx: "./relative/path/to/data.xlsx"
  colors_csv: "./relative/path/to/colors.csv"
  # host families file

# MongoDB
mongodb:
  cluster_id: "your_mongo_cluster_id"
  database: "your_mongo_database"
  user: "your_mongo_username"
  password: "your_mongo_password"
  genera_collection: "genera_collection"
  feature_selection_modal_hints_collection: "feature_selection_modal_hints_collection"
  host_families_collection: "host_families_collection"
  colors_collection: "colors_collection"
  # order data collection if implemented

# AWS
aws:
  access_key: "aws_access_key"
  secret_key: "aws_secret_key"

# Endpoints
endpoints:
  - order_colors: "https://api.my_service.com/order_colors"
# ...
# ...
# ...


# query parameters
# used to build query to hit api. the parameter name must reference a 
# feature_name found in the filter_content section. 
query_params:
  - param_name_0: "feature_name_0"
  - param_name_1: "feature_name_1"
  - param_name_n: "feature_name_n"

# feature_templates
filter_types:
  - radio_pill_selector
  - checklist_pill_selector
  - suggestion_box

filters_template:
  # radio_pill_selector template
  - filter:
      feature_name: "myFeatureName" # have rules for naming
      filter_type: radio_pill_selector
      heading: "optional" # remove if unwanted
      inputs:  # label (text displayed on buttons) : value (value used by api)
        - "label 0": "value_0"
        - "label 1": "value_1"
        - "label 2": "value_n"
      hint_modal: True # true: adds hint modal button, false: does not add hint modal button
  
  # checklist_pill_selector template
  - filter: 
      feature_name: "myFeatureName" # have rules for naming
      filter_type: checklist_pill_selector
      heading: "optional" # remove if unwanted
      abbreviation: # remove abbreviation block if not used
        abbreviated_phrase: "AP"
        unabbreviated_phrase: "unabreviated phase"
      inputs: # label (text displayed on buttons) : value (value used by api)
        - "label 0": "value_0"
        - "label 1": "value_1"
        - "label 2": "value_n"
      hint_modal: True # true: adds hint modal button, false: does not add hint modal button

  # suggestion_box template
  - filter: 
      feature_name: "myFeatureName" # have rules for naming
      filter_type: suggestion_box
      heading: "optional" # remove if unwanted
      api_endpoint: "https://api.my_service.com/endpoint_to_fetch_this_suggestion_box%27s_options"
      target_data_key: "host_family" # key in returned json from api that is used to build list of options
      # would suggestion boxes ever have hint modals?
      # hint_modal: True # true: adds hint modal button, false: does not add hint modal button

# accordion
accordion_template:
  accordion:
    header: "my header"
    open_initally: True # true/false
    divider: False # true adds a dividing line beneath the accordion
    filters:
      - filter: "use one of the above filter templates"
      - filter: "use one of the above filter templates"
      - filter: "use one of the above filter templates"



# CONTENT
filter_content:
  - heading: "My Header" # first element must be a heading
